{"version":3,"file":"js/448.7217fc58.js","mappings":"+NACEA,EAAAA,EAAAA,GAAoB,UAAhB,eAAW,G,GACfA,EAAAA,EAAAA,GAAoD,SAAjD,iDAA6C,G,6DADhDC,EACAC,GACAC,EAAAA,EAAAA,IAAmEC,EAAAA,GAAAA,C,WAArCC,EAAAA,M,qCAAAA,EAAAA,MAAK,G,eAArB,CAAAC,QAAAA,GAAuBC,YAAY,iB,wBACjDP,EAAAA,EAAAA,GAEM,aADJG,EAAAA,EAAAA,IAAsCK,EAAAA,EAAAA,CAA9BC,QAAOC,EAAAA,MAAI,C,kBAAE,IAAS,UAAT,gB,uBAEvBV,EAAAA,EAAAA,GAA6B,SAA1B,cAAU,QAAGK,EAAAA,QAAM,IACtBL,EAAAA,EAAAA,GAA0C,SAAvC,oBAAgB,QAAGK,EAAAA,MAAO,YAAS,IACtCF,EAAAA,EAAAA,IAAYQ,EAAAA,IAAAA,G,CCTC,SAASC,IACtB,MAAMC,EAAaC,IACjB,IAAIC,EAAM,EACNC,EAAQ,EACZ,MAAOA,EAAQF,EAAG,CAChBC,IACA,IAAIE,EAAI,EACR,MAAOA,GAAKF,EAAK,CACf,GAAIA,EAAME,IAAM,EACd,MAEFA,GACF,CACIA,IAAMF,GACRC,GAEJ,CACA,OAAOD,CAAG,EAGZG,UAAaC,IAEU,YAAnBA,EAAMC,KAAKC,KACQ,SAAnBF,EAAMC,KAAKC,KACXF,EAAMC,KAAKE,OAEXC,YAAY,CAAEF,IAAK,UAAWG,OAAO,IACrCD,YAAY,CACVF,IAAK,OACLG,MAAOX,KAAaM,EAAMC,KAAKE,QAEjCC,YAAY,CAAEF,IAAK,UAAWG,OAAO,IACvC,CAEJ,CDpBA,MAAMC,EAAKb,EAAOc,WACZC,EAASF,EAAGG,UAAUH,EAAGI,QAAQ,KAAO,EAAGJ,EAAGK,YAAY,MAC1DC,EAAkBC,IAAIC,gBAAgB,IAAIC,KAAK,CAACP,KAChDQ,EAAS,IAAIC,OAAOL,GAE1B,OACEX,OACE,MAAO,CACLiB,KAAM,kBACNC,MAAO,QACPC,OAAQ,EACRC,KAAM,EACNC,MAAOC,KAAKC,MAEhB,EACAC,QAAS,CACPC,OACEC,KAAKL,MAAQC,KAAKC,MAClB,IACE,MAAMrC,EAASyC,SAASD,KAAKR,OAC7BH,EAAOZ,YAAY,CACjBF,IAAK,YACLC,KAAM,CAAChB,IAIX,CAFE,MAAO0C,GACPC,QAAQC,IAAIF,EACd,CACF,GAEFG,UACEhB,EAAOjB,UAAaC,IAClB,GAAuB,YAAnBA,EAAMC,KAAKC,IACbyB,KAAKM,MAAM,UAAWjC,EAAMC,KAAKI,YAC5B,GAAuB,SAAnBL,EAAMC,KAAKC,IAAgB,CACpC,IAAIgC,EAAMX,KAAKC,MACfG,KAAKN,KAAOc,KAAKC,OAAOF,EAAMP,KAAKL,OAAS,KAC5CK,KAAKP,OAASpB,EAAMC,KAAKI,KAC3B,MACEyB,QAAQO,MAAMrC,EAAMC,KACtB,CAEJ,G,QElDF,MAAMqC,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://monstradore/./src/views/PerformanceView.vue","webpack://monstradore/./src/views/worker.js","webpack://monstradore/./src/views/PerformanceView.vue?bbbd"],"sourcesContent":["<template>\n  <h1>Performance</h1>\n  <p>Die wievielte Primzahl soll berechnet werden?</p>\n  <v-text-field v-model.number=\"input\" placeholder=\"Zahl eingeben\" />\n  <div>\n    <v-btn @click=\"calc\">Berechnen</v-btn>\n  </div>\n  <p>Ergebnis: {{ result }}</p>\n  <p>Ben√∂tigte Zeit: {{ time }} Sekunden</p>\n  <v-slider />\n</template>\n\n<script>\nimport worker from \"./worker\";\nconst fn = worker.toString();\nconst fnBody = fn.substring(fn.indexOf(\"{\") + 1, fn.lastIndexOf(\"}\"));\nconst workerSourceURL = URL.createObjectURL(new Blob([fnBody]));\nconst bgCalc = new Worker(workerSourceURL);\n\nexport default {\n  data() {\n    return {\n      name: \"PerformanceView\",\n      input: \"20000\",\n      result: 0,\n      time: 0,\n      start: Date.now(),\n    };\n  },\n  methods: {\n    calc() {\n      this.start = Date.now();\n      try {\n        const number = parseInt(this.input);\n        bgCalc.postMessage({\n          key: \"calcPrime\",\n          args: [number],\n        });\n      } catch (e) {\n        console.log(e);\n      }\n    },\n  },\n  created() {\n    bgCalc.onmessage = (event) => {\n      if (event.data.key === \"working\") {\n        this.$emit(\"loading\", event.data.value);\n      } else if (event.data.key === \"nums\") {\n        let end = Date.now();\n        this.time = Math.floor((end - this.start) / 1000);\n        this.result = event.data.value;\n      } else {\n        console.error(event.data);\n      }\n    };\n  },\n};\n</script>\n\n<style scoped></style>\n","export default function worker() {\n  const calcPrime = (n) => {\n    let num = 1;\n    let count = 0;\n    while (count < n) {\n      num++;\n      let i = 2;\n      while (i <= num) {\n        if (num % i === 0) {\n          break;\n        }\n        i++;\n      }\n      if (i === num) {\n        count++;\n      }\n    }\n    return num;\n  };\n\n  onmessage = (event) => {\n    if (\n      event.data.key !== \"working\" &&\n      event.data.key !== \"nums\" &&\n      event.data.args\n    ) {\n      postMessage({ key: \"working\", value: true });\n      postMessage({\n        key: \"nums\",\n        value: calcPrime(...event.data.args),\n      });\n      postMessage({ key: \"working\", value: false });\n    }\n  };\n}\n","import { render } from \"./PerformanceView.vue?vue&type=template&id=17ea2462\"\nimport script from \"./PerformanceView.vue?vue&type=script&lang=js\"\nexport * from \"./PerformanceView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/anja/Documents/GitHub/masterthesis/vue-js/monstradore/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","_hoisted_1","_hoisted_2","_createVNode","_component_v_text_field","$data","number","placeholder","_component_v_btn","onClick","$options","_component_v_slider","worker","calcPrime","n","num","count","i","onmessage","event","data","key","args","postMessage","value","fn","toString","fnBody","substring","indexOf","lastIndexOf","workerSourceURL","URL","createObjectURL","Blob","bgCalc","Worker","name","input","result","time","start","Date","now","methods","calc","this","parseInt","e","console","log","created","$emit","end","Math","floor","error","__exports__","render"],"sourceRoot":""}
"use strict";(self["webpackChunkmonstradore"]=self["webpackChunkmonstradore"]||[]).push([[434],{7434:function(e,t,n){n.r(t),n.d(t,{default:function(){return m}});var r=n(3396),s=n(7139),o=n(5101),a=n(165);const l=(0,r._)("h1",null,"Persistenz",-1),i=(0,r._)("p",null,"Username eingeben",-1),u={class:"list"};function d(e,t,n,d,c,p){return(0,r.wg)(),(0,r.iD)(r.HY,null,[l,i,(0,r.Wm)(a.hw,{modelValue:c.input,"onUpdate:modelValue":t[0]||(t[0]=e=>c.input=e),placeholder:"Label"},null,8,["modelValue"]),(0,r._)("div",null,[(0,r.Wm)(o.T,{onClick:p.addUser},{default:(0,r.w5)((()=>[(0,r.Uk)("User speichern")])),_:1},8,["onClick"])]),(0,r._)("ul",u,[((0,r.wg)(!0),(0,r.iD)(r.HY,null,(0,r.Ko)(c.content,((e,t)=>((0,r.wg)(),(0,r.iD)("li",{key:t},(0,s.zw)(e),1)))),128))])],64)}n(7658);var c={name:"PersistenceView",data(){return{content:[],input:""}},methods:{async getDb(){return new Promise(((e,t)=>{let n=window.indexedDB.open("users");n.onerror=e=>{console.log("Error opening db",e),t("Error")},n.onsuccess=t=>{e(t.target.result)},n.onupgradeneeded=e=>{console.log("onupgradeneeded");let t=e.target.result;t.createObjectStore("users",{autoIncrement:!0,keyPath:"id"})}}))},async getUsersFromDb(){return new Promise((e=>{let t=this.db.transaction(["users"],"readonly");t.oncomplete=()=>{e(r)};let n=t.objectStore("users"),r=[];n.openCursor().onsuccess=e=>{let t=e.target.result;t&&(r.push(t.value),t.continue())}}))},async addUser(){let e={content:new Blob([this.input],{type:"text/plain"})};await this.addUserToDb(e),await this.readUsers()},async addUserToDb(e){return new Promise((t=>{let n=this.db.transaction(["users"],"readwrite");n.oncomplete=()=>{t()};let r=n.objectStore("users");r.add(e)}))},async readUsers(){this.content=await Promise.all((await this.getUsersFromDb()).map((e=>e.content.text())))}},async mounted(){this.db=await this.getDb(),await this.readUsers()}},p=n(89);const w=(0,p.Z)(c,[["render",d]]);var m=w}}]);
//# sourceMappingURL=434.ac8ebbaa.js.map
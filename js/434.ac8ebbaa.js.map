{"version":3,"file":"js/434.ac8ebbaa.js","mappings":"sNACEA,EAAAA,EAAAA,GAAmB,UAAf,cAAU,G,GACdA,EAAAA,EAAAA,GAAwB,SAArB,qBAAiB,G,GAKhBC,MAAM,Q,6DANVC,EACAC,GACAC,EAAAA,EAAAA,IAAoDC,EAAAA,GAAAA,C,WAA7BC,EAAAA,M,qCAAAA,EAAAA,MAAK,GAAEC,YAAY,S,wBAC1CP,EAAAA,EAAAA,GAEM,aADJI,EAAAA,EAAAA,IAA8CI,EAAAA,EAAAA,CAAtCC,QAAOC,EAAAA,SAAO,C,kBAAE,IAAc,UAAd,qB,uBAE1BV,EAAAA,EAAAA,GAIK,KAJLW,EAIK,gBAHHC,EAAAA,EAAAA,IAEKC,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IAFmBP,EAAAA,SAAO,CAAnBQ,EAAMC,M,WAAlBH,EAAAA,EAAAA,IAEK,MAF6BI,IAAKD,IAAC,QACnCD,GAAI,M,yBAMb,GACEG,KAAM,kBACNC,OACE,MAAO,CACLC,QAAS,GACTC,MAAO,GAEX,EACAC,QAAS,CACPC,cACE,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,IAAIC,EAAUC,OAAOC,UAAUC,KAAK,SAEpCH,EAAQI,QAAWC,IACjBC,QAAQC,IAAI,mBAAoBF,GAChCN,EAAO,QAAQ,EAGjBC,EAAQQ,UAAaH,IACnBP,EAAQO,EAAEI,OAAOC,OAAO,EAG1BV,EAAQW,gBAAmBN,IACzBC,QAAQC,IAAI,mBACZ,IAAIK,EAAKP,EAAEI,OAAOC,OAClBE,EAAGC,kBAAkB,QAAS,CAC5BC,eAAe,EACfC,QAAS,MACT,CACH,GAEL,EACAnB,uBACE,OAAO,IAAIC,SAASC,IAClB,IAAIkB,EAAQC,KAAKL,GAAGM,YAAY,CAAC,SAAU,YAC3CF,EAAMG,WAAa,KACjBrB,EAAQsB,EAAM,EAGhB,IAAIC,EAAQL,EAAMM,YAAY,SAC1BF,EAAQ,GAEZC,EAAME,aAAaf,UAAaH,IAC9B,IAAImB,EAASnB,EAAEI,OAAOC,OAClBc,IACFJ,EAAMK,KAAKD,EAAOE,OAClBF,EAAOG,WACT,CACD,GAEL,EACA/B,gBACE,IAAIR,EAAO,CACTK,QAAS,IAAImC,KAAK,CAACX,KAAKvB,OAAQ,CAAEmC,KAAM,sBAEpCZ,KAAKa,YAAY1C,SACjB6B,KAAKc,WACb,EACAnC,kBAAkBR,GAChB,OAAO,IAAIS,SAASC,IAClB,IAAIkB,EAAQC,KAAKL,GAAGM,YAAY,CAAC,SAAU,aAC3CF,EAAMG,WAAa,KACjBrB,GAAS,EAGX,IAAIuB,EAAQL,EAAMM,YAAY,SAC9BD,EAAMW,IAAI5C,EAAK,GAEnB,EACAQ,kBACEqB,KAAKxB,cAAgBI,QAAQoC,WACpBhB,KAAKiB,kBAAkBC,KAAKC,GAAOA,EAAG3C,QAAQ4C,SAEzD,GAEFzC,gBACEqB,KAAKL,SAAWK,KAAKqB,cACfrB,KAAKc,WACb,G,QCxFF,MAAMQ,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://monstradore/./src/views/PersistenceView.vue","webpack://monstradore/./src/views/PersistenceView.vue?8968"],"sourcesContent":["<template>\n  <h1>Persistenz</h1>\n  <p>Username eingeben</p>\n  <v-text-field v-model=\"input\" placeholder=\"Label\" />\n  <div>\n    <v-btn @click=\"addUser\">User speichern</v-btn>\n  </div>\n  <ul class=\"list\">\n    <li v-for=\"(user, i) in content\" :key=\"i\">\n      {{ user }}\n    </li>\n  </ul>\n</template>\n\n<script>\nexport default {\n  name: \"PersistenceView\",\n  data() {\n    return {\n      content: [],\n      input: \"\",\n    };\n  },\n  methods: {\n    async getDb() {\n      return new Promise((resolve, reject) => {\n        let request = window.indexedDB.open(\"users\");\n\n        request.onerror = (e) => {\n          console.log(\"Error opening db\", e);\n          reject(\"Error\");\n        };\n\n        request.onsuccess = (e) => {\n          resolve(e.target.result);\n        };\n\n        request.onupgradeneeded = (e) => {\n          console.log(\"onupgradeneeded\");\n          let db = e.target.result;\n          db.createObjectStore(\"users\", {\n            autoIncrement: true,\n            keyPath: \"id\",\n          });\n        };\n      });\n    },\n    async getUsersFromDb() {\n      return new Promise((resolve) => {\n        let trans = this.db.transaction([\"users\"], \"readonly\");\n        trans.oncomplete = () => {\n          resolve(users);\n        };\n\n        let store = trans.objectStore(\"users\");\n        let users = [];\n\n        store.openCursor().onsuccess = (e) => {\n          let cursor = e.target.result;\n          if (cursor) {\n            users.push(cursor.value);\n            cursor.continue();\n          }\n        };\n      });\n    },\n    async addUser() {\n      let user = {\n        content: new Blob([this.input], { type: \"text/plain\" }),\n      };\n      await this.addUserToDb(user);\n      await this.readUsers();\n    },\n    async addUserToDb(user) {\n      return new Promise((resolve) => {\n        let trans = this.db.transaction([\"users\"], \"readwrite\");\n        trans.oncomplete = () => {\n          resolve();\n        };\n\n        let store = trans.objectStore(\"users\");\n        store.add(user);\n      });\n    },\n    async readUsers() {\n      this.content = await Promise.all(\n        (await this.getUsersFromDb()).map((it) => it.content.text())\n      );\n    },\n  },\n  async mounted() {\n    this.db = await this.getDb();\n    await this.readUsers();\n  },\n  // mounted() {\n  //   this.getUsers();\n  // },\n  // data() {\n  //   return {\n  //     name: \"PersistenceView\",\n  //     content: [],\n  //     input: \"\",\n  //   };\n  // },\n  // methods: {\n  //   saveUser() {\n  //     this.content.push(this.input);\n  //     localStorage.setItem(\"users\", JSON.stringify(this.content));\n  //     this.input = \"\";\n  //   },\n  //   getUsers() {\n  //     this.content = JSON.parse(localStorage.getItem(\"users\"));\n  //   },\n  // },\n};\n</script>\n\n<style scoped></style>\n","import { render } from \"./PersistenceView.vue?vue&type=template&id=6af86f78\"\nimport script from \"./PersistenceView.vue?vue&type=script&lang=js\"\nexport * from \"./PersistenceView.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/anja/Documents/GitHub/masterthesis/vue-js/monstradore/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_createVNode","_component_v_text_field","$data","placeholder","_component_v_btn","onClick","$options","_hoisted_3","_createElementBlock","_Fragment","user","i","key","name","data","content","input","methods","async","Promise","resolve","reject","request","window","indexedDB","open","onerror","e","console","log","onsuccess","target","result","onupgradeneeded","db","createObjectStore","autoIncrement","keyPath","trans","this","transaction","oncomplete","users","store","objectStore","openCursor","cursor","push","value","continue","Blob","type","addUserToDb","readUsers","add","all","getUsersFromDb","map","it","text","getDb","__exports__","render"],"sourceRoot":""}